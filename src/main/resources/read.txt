Here’s a clean, deck-ready note for the given **CAS Login → PRS DB** authentication flow:

---

## **CAS Login – PRS DB Authentication Flow**

**Purpose:**
Authenticate users against the PRS Database using CAS (Central Authentication Service) login.

**Flow Steps:**

1. **User Initiates Login**

   * User accesses the application and is redirected to **CAS Login** page.

2. **Authentication Request**

   * CAS Login service sends an authentication query to **PRS DB** with provided credentials.

3. **Credential Verification**

   * PRS DB validates the credentials against stored user records.

4. **Response to CAS**

   * **Success:** User credentials are valid; CAS establishes authenticated session.
   * **Failure:** Invalid credentials; CAS returns an error message to the user.

**Key Points for Deck:**

* PRS DB is the **source of truth** for authentication in current state.
* CAS acts as the **authentication broker** between user and PRS DB.
* No integration here with Epic Identity or Prelude — this is legacy CIAM authentication.
* In the **future state**, PRS DB authentication will be deprecated in favor of **Epic Identity** with Prelude handling registration and login workflows.

---

If you’d like, I can also add a **side-by-side diagram** showing this **current state** flow next to the **future state (Epic Identity + Prelude)** authentication flow for better transition storytelling in your deck.
