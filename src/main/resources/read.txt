CREATE TABLE STG_PERSON (
  stg_id           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,

  -- lineage
  source_system    VARCHAR2(20)  NOT NULL,   -- PRS | MYQUEST | ECPM
  source_pk        VARCHAR2(100) NOT NULL,   -- table PK from source
  created_at_src   TIMESTAMP,                -- for "newest wins"
  modified_at_src  TIMESTAMP,

  -- core attributes (normalized on load where possible)
  first_name       VARCHAR2(100),
  middle_name      VARCHAR2(50),
  last_name        VARCHAR2(100),
  dob              DATE,
  gender_code      VARCHAR2(10),

  email            VARCHAR2(256),
  email_verified   CHAR(1),
  phone_e164       VARCHAR2(20),

  address_line_1   VARCHAR2(256),
  address_line_2   VARCHAR2(256),
  city_name        VARCHAR2(100),
  state_abbrev     VARCHAR2(30),
  zip_code         VARCHAR2(50),
  country_name     VARCHAR2(50),

  -- known ids / relations (deterministic joins)
  prs_profile_id   VARCHAR2(100),  -- PRS.PATIENT_PROFILES_ID / MYQUEST.PRS_PROFILE_ID
  patient_id       VARCHAR2(100),  -- MYQUEST.PATIENT_ID / DUES.PATIENT_ID
  empi             VARCHAR2(100),  -- PRS.EMPI_MEMRECNO
  eid              VARCHAR2(100),  -- MYQUEST.EID
  patient_eid      VARCHAR2(100),  -- DUES.patient_eid
  user_id          VARCHAR2(100),  -- PRS.LOGIN_ID / MYQUEST.USER_ID (lineage only)

  -- derived matching helpers
  email_norm       VARCHAR2(256),
  phone_digits     VARCHAR2(20),
  phone_last7      VARCHAR2(10),
  first_up         VARCHAR2(100),
  middle_up        VARCHAR2(50),
  last_up          VARCHAR2(100),
  zip_up           VARCHAR2(50),
  street_key       VARCHAR2(120),   -- house#|PRIMARYSTREETTOKEN

  -- duplicate group id (filled later)
  comp_id          NUMBER
);

CREATE UNIQUE INDEX ux_stg_lineage ON STG_PERSON(source_system, source_pk);
CREATE INDEX ix_stg_email_norm ON STG_PERSON(email_norm);
CREATE INDEX ix_stg_phone7     ON STG_PERSON(phone_last7);
CREATE INDEX ix_stg_name_dob   ON STG_PERSON(last_up, first_up, dob);
CREATE INDEX ix_stg_zip        ON STG_PERSON(zip_up);
